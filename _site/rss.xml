<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
        <title>하니_레반슈타인</title>
        <description>하니_레반슈타인 - 이하원</description>
        <link>http://Hani-Levenshtein.github.io</link>
        <atom:link href="http://Hani-Levenshtein.github.io/rss.xml" rel="self" type="application/rss+xml" />
        <lastBuildDate>Tue, 25 Jan 2022 09:35:48 +0900</lastBuildDate>
        <pubDate>Tue, 25 Jan 2022 09:35:48 +0900</pubDate>
        <ttl>60</ttl>


        <item>
                <title>[iOS][macOS] Bundle</title>
                <description>
&lt;h2 id=&quot;패키지란&quot;&gt;패키지란&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;A package is any directory that the Finder presents to the user as if it were a single file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;패키지는 macOS의 Finder에서 디렉토리를 마치 하나의 파일인 것처럼 나타낸 것입니다.&lt;/p&gt;

&lt;p&gt;.app, .kext, &lt;code&gt;.bundle&lt;/code&gt;, .framework, .plugin 등의 확장자가 패키지의 일종입니다.&lt;/p&gt;

&lt;h2 id=&quot;번들이란&quot;&gt;번들이란&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;A bundle is a directory with a standardized hierarchical structure that holds executable code and the resources used by that code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;번들은 실행가능한 코드와 코드가 사용하는 리소스를 캡슐화한 계층 구조를 갖는 디렉토리입니다.&lt;/p&gt;

&lt;p&gt;번들에 대한 예시로, 앱 번들에 한 번 접근해 보겠습니다.&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;&amp;lt;img src=&quot;http://Hani-Levenshtein.github.io/image/2022/01/24/01.png&quot;&lt;/p&gt;

&lt;p&gt;Xcode - Preferences - Location - Derived Data 화살표 클릭&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;&amp;lt;img src=&quot;http://Hani-Levenshtein.github.io/image/2022/01/24/02.png&quot;&lt;/p&gt;

&lt;p&gt;Build - Product - Debug - AppName 앱 번들 확인 가능&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;&amp;lt;img src=&quot;http://Hani-Levenshtein.github.io/image/2022/01/24/03.png&quot;&lt;/p&gt;

&lt;h2 id=&quot;번들의-구조&quot;&gt;번들의 구조&lt;/h2&gt;

&lt;p&gt;번들의 구조는 번들의 타입과 플랫폼에 따라 다르지만, 번들을 사용하는 방식은 같습니다.&lt;/p&gt;

&lt;h3 id=&quot;앱-번들&quot;&gt;앱 번들&lt;/h3&gt;

&lt;p&gt;Xcode가 앱을 빌드하면 앱 번들을 생성하게 되며, 앱 번들은 앱을 작동시키는데 필요한 모든 리소스를 저장하고 있습니다.&lt;/p&gt;

&lt;p&gt;iOS 앱 번들과 macOS 앱 번들의 구조는 약간의 차이가 있으나 사용 방식에는 차이가 없습니다.&lt;/p&gt;

&lt;h4 id=&quot;ios-앱-번들&quot;&gt;iOS 앱 번들&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;MyApp.app/
   Info.plist
   MyApp
   Default.png
   Icon.png
   Hand.png
   MainWindow.nib
   MyAppViewController.nib
   WaterSounds/
      Water1.aiff
      Water2.aiff
   en_GB.lproj/
      CustomView.nib
      bird.png
      Bye.txt
      Localizable.strings
   en_US.lproj/
      CustomView.nib
      bird.png
      Bye.txt
      Localizable.strings
   jp.lproj/
      CustomView.nib
      bird.png
      Bye.txt
      Localizable.strings
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;파일&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;AppName&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(필수)앱의 코드를 갖고 있는 Executable 파일입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;App Icon&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(필수/권장)홈 화면에서 보이는 앱 아이콘입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Info.plist&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(필수)bundle ID, version number, and display name 등 앱의 Configuration에 대한 정보를 가지고 있는 파일입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Launch image&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(권장)앱이 켜질 때 window와 UI를 로드하기 전에 보이는 이미지입니다. 없다면 검은 화면이 보입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MainWindow.nib&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(권장)앱의 launch time에 로드될 객체를 갖고 있는 nib 파일입니다. UISceneStoryboardFile 혹은 UIMainStoryboardFile에 사용자 정의 nib 이름을 사용할 수 있습니다. 포스팅 하단 &lt;code&gt;References&lt;/code&gt; 에 달아놓은 도서에 의하면 NSMainNibFile는 더 이상 사용되지 않은 Property List Key입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Settings.bundle&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;앱 설정과 관한 Preference를 추가할 수 있는 Plug-in 번들의 한 형태입니다. Property List 파일과 Preference 관련 리소스를 가지고 있습니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Custom resource files&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;리소스는 nib, image, sound 등의 데이터입니다. 지역화되지 않은 리소스는 번들의 루트레벨에 있게 되지만, 지역화된 리소스는 &lt;code&gt;lproj&lt;/code&gt; 패키지 아래에 존재하게 됩니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Internationalization(i18n)과 Localization(i10n)을 지원하기 위해선 &lt;code&gt;language_region.lproj&lt;/code&gt; 패키지에 해당 언어에 맞는 리소스를 넣어줘야 합니다.&lt;/p&gt;

&lt;p&gt;i18n를 위한 language는 &lt;code&gt;ISO 639&lt;/code&gt; 컨벤션을 따르고 i10n을 위한 region은 &lt;code&gt;ISO 3166&lt;/code&gt; 컨벤션을 따릅니다.&lt;/p&gt;

&lt;p&gt;단, i18n/i10n를 신경쓰지 않을 경우 &lt;code&gt;Base.lproj&lt;/code&gt; 패키지에 리소스가 존재하게 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;macos-앱-번들&quot;&gt;macOS 앱 번들&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;MyApp.app/
   Contents/
      Info.plist
      MacOS/
         MyApp
      Resources/
         Hand.tiff
         MyApp.icns
         WaterSounds/
            Water1.aiff
            Water2.aiff
         en.lproj/
            MyApp.nib
            bird.tiff
            Bye.txt
            InfoPlist.strings
            Localizable.strings
            CitySounds/
               city1.aiff
               city2.aiff
         jp.lproj/
            MyApp.nib
            bird.tiff
            Bye.txt
            InfoPlist.strings
            Localizable.strings
            CitySounds/
               city1.aiff
               city2.aiff
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;macOS 앱 번들의 구조는 번들의 루트에 Contents 디렉토리가 있고, 이 디렉토리가 Info.plist, Executable File, 리소스 등을 모두 가지고 있는 형태입니다.&lt;/p&gt;

&lt;p&gt;Contents 디렉토리는 쓸모없어 보이지만 macOS 초기의 레거시 번들과 구분할 수 있게 해주는 역할을 합니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;파일&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MacOS&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(필수)앱의 코드를 갖고 있는 Executable 파일을 가지고 있는 디렉토리입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Resources&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;앱의 모든 리소스를 가지고 있는 디렉토리입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Frameworks&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Executable 파일에 의해 사용되는 공유 라이브러리와 프레임워크를 갖고 있는 디렉토리입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;PlugIns&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;앱에 기능을 추가할 수 있는 로더블 번들을 갖고 있는 디렉토리입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SharedSupport&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;앱을 실행하는데 크게 중요하지 않은 부가적인 리소스를 갖고 있는 디렉토리입니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;프레임워크-번들&quot;&gt;프레임워크 번들&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;MyFramework.framework/
   MyFramework  -&amp;gt; Versions/Current/MyFramework
   Resources    -&amp;gt; Versions/Current/Resources
   Versions/
      A/
         MyFramework
         Headers/
            MyHeader.h
         Resources/
            English.lproj/
               InfoPlist.strings
            Info.plist
      Current  -&amp;gt; A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;프레임워크는 동적 공유 라이브러리와 그 라이브러리를 지원하기 위해 필요한 리소스를 캡슐화한 계층 디렉토리입니다.&lt;/p&gt;

&lt;p&gt;프레임워크는 동적 공유 라이브러리와 마찬가지로 하나만 메모리에 적재되어도 다수의 앱에서 공유할 수 있으나, 동적 공유 라이브러리와는 다르게 라이브러리와 리소스를 하나의 파일에서 제공할 수 있는 장점이 있습니다.&lt;/p&gt;

&lt;p&gt;단, 해당 프레임워크를 사용하는 앱들이 서로 다른 프레임워크 버젼을 원할 수 있기 때문에 &lt;code&gt;Versions&lt;/code&gt; 디렉토리에서 ~~&lt;/p&gt;

&lt;p&gt;프레임워크의 코드와 읽기 전용 리소스만이 공유되며, writable한 변수가 있다면 다수의 앱이 의도치않은 공유를 하지 않도록 각 앱이 개별적으로 변수를 복사하여 갖게 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;로더블lodable-번들&quot;&gt;로더블(Lodable) 번들&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;MyLoadableBundle.bundle
   Contents/
      Info.plist
      MacOS/
         MyLoadableBundle
      Resources/
         Lizard.jpg
         MyLoadableBundle.icns
         en.lproj/
            MyLoadableBundle.nib
            InfoPlist.strings
         jp.lproj/
            MyLoadableBundle.nib
            InfoPlist.strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;plugin을 비롯한 다른 로더블 번들은 앱을 동적으로 확장시킬 수 있는 방법을 제공합니다.&lt;/p&gt;

&lt;p&gt;로더블 번들은 실행가능한 코드와 그 코드를 실행하기 위해 필요한 리소스로 구성되어 있습니다.&lt;/p&gt;

&lt;p&gt;단, iOS에서는 로더블 번들을 생성하거나 사용할 수 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;번들에-있는-localized된-리소스&quot;&gt;번들에 있는 localized된 리소스&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Resources/
   MyApp.icns
   en_GB.lproj/
      MyApp.nib
      bird.tiff
      Localizable.strings
   en_US.lproj/
      MyApp.nib
      Localizable.strings
   en.lproj/
      MyApp.nib
      bird.tiff
      Bye.txt
      house.jpg
      InfoPlist.strings
      Localizable.strings
      CitySounds/
         city1.aiff
         city2.aiff
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;앱 번들을 소개하면서 i18n, i10n에 대하여 다뤘기 때문에 추가적인 내용만을 언급하자면, 리소스를 찾는 순서는 &lt;code&gt;language_region.lproj&lt;/code&gt;, &lt;code&gt;language.lproj&lt;/code&gt;, &lt;code&gt;region.lproj&lt;/code&gt;, &lt;code&gt;non-localized resource&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;h2 id=&quot;내-프로젝트-앱-번들&quot;&gt;내 프로젝트 앱 번들&lt;/h2&gt;

&lt;p&gt;공식 문서를 통해 번들에 대하여 알아봤으니 제 프로젝트의 앱 번들은 어떤 구조를 가지고 있는지 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;~~~&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFBundles/Introduction/Introduction.html#//apple_ref/doc/uid/10000123i-CH1-SW1&quot;&gt;Apple Bundle Programming Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[도서: iOS 7 Programming Pushing the Limits: Develop Advance Applications for Apple iPhone, iPad, and iPod Touch 1st Edition - &lt;strong&gt;72 Page&lt;/strong&gt;]&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://Hani-Levenshtein.github.io/ios/macos/2022/01/24/iOS-macOS-Bundle</link>
                <guid>http://Hani-Levenshtein.github.io/ios/macos/2022/01/24/[iOS][macOS] Bundle</guid>
                <pubDate>Mon, 24 Jan 2022 00:00:00 +0900</pubDate>
        </item>


</channel>
</rss>
